const o=e=>{const a=e.filter(t=>t.isActive).map((t,r)=>({id:r+1,priority:1,action:{type:chrome.declarativeNetRequest.RuleActionType.REDIRECT,redirect:{url:`data:application/json;base64,${btoa(t.response.trim())}`}},condition:{urlFilter:t.url,resourceTypes:[chrome.declarativeNetRequest.ResourceType.XMLHTTPREQUEST]}}));chrome.declarativeNetRequest.updateDynamicRules({removeRuleIds:Array.from({length:1e3},(t,r)=>r+1),addRules:a})};chrome.storage.local.get(["mocks"],e=>{o(e.mocks||[])});chrome.storage.onChanged.addListener(e=>{e.mocks&&o(e.mocks.newValue||[])});
