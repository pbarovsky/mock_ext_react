const r=e=>{const a=e.filter(t=>t.isActive).map((t,o)=>({id:o+1,priority:1,action:{type:chrome.declarativeNetRequest.RuleActionType.REDIRECT,redirect:{url:`data:application/json;base64,${btoa(t.response.trim())}`}},condition:{urlFilter:t.url,resourceTypes:[chrome.declarativeNetRequest.ResourceType.XMLHTTPREQUEST]}}));chrome.declarativeNetRequest.updateDynamicRules({removeRuleIds:Array.from({length:1e3},(t,o)=>o+1),addRules:a})};chrome.storage.local.get(["mocks"],e=>{r(e.mocks||[])});chrome.storage.onChanged.addListener(e=>{e.mocks&&r(e.mocks.newValue||[])});chrome.action.onClicked.addListener(()=>{chrome.windows.create({url:"./index.html",type:"popup",state:"normal",focused:!1,width:550,height:600,top:100,left:100})});
